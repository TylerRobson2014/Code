<!doctype html>
<html lang="en">
<head>

<meta charset="uft-8">


</head>
<body>

<h1>Project plan</h1>
<div>
<form id = "projectDates">
  Select a project start week:
  <input type="date" id="projStart" oninput="addStart('projStart')">
  Select a project end week:
  <input type="date" id="projEnd" oninput="addEnd('projEnd')">
</form>
</div>

<script>
// get the project start date and end date from local storage - NULL if they dont exist
var existStartDate = localStorage.getItem("projStart");
var existEndDate = localStorage.getItem("projEnd");

// now get the element - the inputs in the form above - and populate with what we found in localstorage
var projectStartDate=document.getElementById("projStart");
projectStartDate.value = existStartDate;
var projectEndDate=document.getElementById("projEnd");
projectEndDate.value = existEndDate;
//

</script>

<p>
<p>

<div id = "dvData">

    <input type="button" value="Clear All" onclick="clearDB('dataTable')">
 
    <input type="button" value="Add Row" onclick="addRow('dataTable')">
 
    <input type="button" value="Delete Row" onclick="deleteRow('dataTable')">

    <input type="button" value="Confim" onclick="updateDB('dataTable')">


<p>
<p>
 
    <table id="dataTable" width="350px" border="1">
        <tbody>
           <tr>
            <th></th>
            <th></th>
            <th>Email address</th>
            <th>Role</th>
           </tr>
           <tr>
            <td><input type="checkbox" name="chk"></td>
            <td> 1 </td>
            <td> <input type="text"> </td>
            <td> <input type="text"> </td>
           </tr>
    </tbody></table>

</div>


<div>

<p>
<p>

<input type="button" value="Draw Gantt" onclick="drawGantt()">
<input type="button" value="Clear Gantt" onclick="clearAll()">

<p>
<p>

<input type="button" value="New Task" onclick="newTask('tasks')">
<input type="button" value="Delete Task" onclick="deleteTask('tasks')">

</div>

<div>

<div id='d2' style="position:absolute; left:0px">
 
    <table id="tasks" width="200px" border="1">
        <tbody>
           <tr>
            <th></th>
            <th>Start</th>
            <th>End</th>
           </tr>
           <tr>
            <td><input type="checkbox" name="chk"></td>
            <td><input type="date" id = "sdate1" oninput="taskStart('sdate1')"> </td>
            <td><input type="date" id = "edate1" oninput="taskEnd('edate1')"> </td>
           </tr>
    </tbody></table>

</div>

<script>

function taskStart(startd){
//alert(startd);
var startDate = document.getElementById(startd).value;
//alert(startDate);
localStorage.setItem(startd,startDate);

};


function taskEnd(endd){

var endDate = document.getElementById(endd).value;
localStorage.setItem(endd,endDate);

};

</script>

<div id='d1' style="position:absolute; left:350px">  
<canvas id="myCanvas" width="1000" height="1000" style="border:1px solid #c3c3c3;">
Your browser does not support the HTML5 canvas tag.
</canvas>
</div>

<script>

function newTask(tableID){

var table=document.getElementById(tableID);
var rowCount=table.rows.length;
var row=table.insertRow(rowCount);
var cell0=row.insertCell(0);
var element0=document.createElement("input");
element0.type="checkbox";
element0.name="chk"+rowCount;
cell0.appendChild(element0);    
var cell1=row.insertCell(1);
var element1=document.createElement("input");
element1.type="date";
element1.id="sdate"+rowCount;
element1.oninput = function(){
taskStart(element1.id);
};
cell1.appendChild(element1);
var cell2=row.insertCell(2);
var element2=document.createElement("input");
element2.type="date";
element2.id="edate"+rowCount;
element2.oninput = function(){
taskEnd(element2.id);
};
cell2.appendChild(element2);

}

function deleteTask(tableID){
try{
var table=document.getElementById(tableID);
var rowCount=table.rows.length;
var item;
for(var i=0;i<rowCount;i++){
var row=table.rows[i];
var chkbox=row.cells[0].childNodes[0];
if(null!=chkbox&&true==chkbox.checked){
item = document.getElementById("tasks").rows[i].cells[1].childNodes[0].id;
localStorage.removeItem(item);
item = document.getElementById("tasks").rows[i].cells[2].childNodes[0].id;
localStorage.removeItem(item);
table.deleteRow(i);
rowCount--;
i--;
}
}
}
catch(e){
alert(e);
}

}


function addStart(start){
var startDate = document.getElementById(start).value;
localStorage.setItem(start,startDate);
};

function addEnd(end){
var endDate = document.getElementById(end).value;
localStorage.setItem(end,endDate);
};

function addRow(tableID){
var table=document.getElementById(tableID);
var rowCount=table.rows.length;
var row=table.insertRow(rowCount);
var cell1=row.insertCell(0);
var element1=document.createElement("input");
element1.type="checkbox";
element1.name="chkbox[]";
cell1.appendChild(element1);
var cell2=row.insertCell(1);
cell2.innerHTML=rowCount;
var cell3=row.insertCell(2);
var element2=document.createElement("input");
element2.type="text";
element2.name="txtbox"+"1";
cell3.appendChild(element2);
var cell4=row.insertCell(3);
var element3=document.createElement("input");
element3.type="text";
element3.name="txtbox[]";
cell4.appendChild(element3);

}

function clearDB(){

localStorage.clear();

}


function updateDB(tableID){

    //gets table

    var oTable = document.getElementById(tableID);

    //gets rows of table
    var rowLength = oTable.rows.length;
    var cellVal = [];

    //loops through rows    
    for (i = 1; i < rowLength; i++){

      //gets cells of current row  
       var oCells = oTable.rows[i].cells;

       //gets amount of cells of current row
       var cellLength = oCells.length;

       //loops through each cell in current row
 //      for(var j = 0; j < cellLength; j++){

              // get your cell info here

       cellVal[i] = oCells[2].children[0].value;
       localStorage.setItem("email"+i,cellVal[i]);
       cellVal[i] = oCells[3].children[0].value;
       localStorage.setItem("Role"+i,cellVal[i]);

 //          }
   }

}

function deleteRow(tableID){
try{
var table=document.getElementById(tableID);
var rowCount=table.rows.length;
for(var i=0;i<rowCount;i++){
var row=table.rows[i];
var chkbox=row.cells[0].childNodes[0];
if(null!=chkbox&&true==chkbox.checked){
table.deleteRow(i);
rowCount--;
i--;
}
}
}
catch(e){
alert(e);
}
} 

function drawGrid(gap){

var c = document.getElementById("myCanvas");
var ctx = c.getContext("2d");

for (i = 0; i < gap+1; i++){
ctx.beginPath();
ctx.moveTo((500/gap)*i+50,0);
ctx.lineWidth = "2";
ctx.strokeStyle = "blue";
ctx.lineTo((500/gap)*i+50,500);
ctx.stroke();
}
};


function deleteFirstRow(tableID){

try{
var table=document.getElementById(tableID);
var row=table.rows[1];
table.deleteRow(1);
}
catch(e){
alert(e);
}
};

function popUlate(tableID,start,startName,end,endName){

var table;
var rowCount;
var row;
var cell0;
var element0;
var cell1;
var element1;
var cell2;
var element2;

//
table=document.getElementById(tableID);
rowCount=table.rows.length;
row=table.insertRow(rowCount);

element0=document.createElement("input");
element0.type="checkbox";
element0.name="chk"+rowCount;
cell0=row.insertCell(0);
cell0.appendChild(element0);
element1=document.createElement("input");    
element1.type="date";
element1.id=startName;
element1.oninput = function(){
taskStart(startName);
};
cell1=row.insertCell(1);
cell1.appendChild(element1);
element2=document.createElement("input");
element2.type="date";
element2.id=endName;
element2.oninput = function(){
taskEnd(endName);
};
cell2=row.insertCell(2);
cell2.appendChild(element2);

//


// set the dates
var projectStartDate=document.getElementById(element1.id);
projectStartDate.value = start;
var projectEndDate=document.getElementById(element2.id);
projectEndDate.value = end;
//

};

function drawGantt(){

var tableID = "tasks";
var numberTasks = 0;
var numberEntries = localStorage.length;
var keyValue;
var taskDays;
var i;

var j = 1;
var start;
var end;
var k;
var keySearch;
var foundStart = 0;
var foundEnd = 0;

// delete the first row in the table

//alert(numberEntries);
deleteFirstRow(tableID);

// populate the table from the local store
var table;
var rowCount;
var row;
var cell0;
var element0;
var cell1;
var element1;
var cell2;
var element2;
var startName;
var endName;

for (i = 0; i < numberEntries; i++){

foundStart = 0;
foundEnd = 0;

keyValue = localStorage.key(i);
keySearch = "edate"+j;
alert(keySearch);
alert(keyValue);
if (keyValue.indexOf(keySearch) > -1){
end = localStorage.getItem(keyValue);
endName = keyValue;
foundEnd = 1;
//alert("hi");

for (k = 0; k < numberEntries; k++){
keyValue = localStorage.key(k);
keySearch = "sdate"+j;
if (keyValue.indexOf(keySearch) > -1){
start = localStorage.getItem(keyValue);
startName = keyValue;
foundStart = 1;
//alert(startName);
}
}
}

if (foundStart && foundEnd){
j++;
//
popUlate(tableID,start,startName,end,endName);
//alert(startName);
//
}

}// i

var c = document.getElementById("myCanvas");
var ctx = c.getContext("2d");
var sDate = localStorage.getItem("projStart");
var eDate = localStorage.getItem("projEnd");
var gap = getDays(sDate,eDate);

drawGrid(gap);

// Blue rectangle


j = 1;

for (k = 0; k < numberEntries; k++){

foundStart = 0;
foundEnd = 0;

for (i = 0; i < numberEntries; i++){
keyValue = localStorage.key(i);

keySearch = "sdate"+j;
if (keyValue.indexOf(keySearch) > -1){
start = localStorage.getItem(keyValue);
foundStart = 1;
}

keySearch = "edate"+j;
if (keyValue.indexOf(keySearch) > -1){
end = localStorage.getItem(keyValue);
foundEnd = 1;
}

}// i

if (foundStart && foundEnd){
taskDays = getDays(start,end);
taskLength = taskDays;
diffFromStart = getDays(sDate,start);

ctx.beginPath();
ctx.moveTo(50+(diffFromStart/gap)*500,50*j);
ctx.lineWidth = "20";
ctx.strokeStyle = "blue";
ctx.lineTo(50+parseInt(((diffFromStart+taskLength)/gap)*500),50*j);
ctx.stroke();
}

j++;

}// k

};

function clearAll() {

var tableID = "tasks";

try{
var table=document.getElementById(tableID);
var rowCount=table.rows.length;
for(var i=2;i<rowCount;i++){
var row=table.rows[i];
var chkbox=row.cells[0].childNodes[0];
table.deleteRow(i);
rowCount--;
i--;
}
}
catch(e){
alert(e);
}


// set the dates
var projectStartDate=document.getElementById("tasks").rows[1].cells[1].childNodes[0];
projectStartDate.value = "";
var projectEndDate=document.getElementById("tasks").rows[1].cells[2].childNodes[0];
projectEndDate.value = "";
//


var c = document.getElementById("myCanvas");
var ctx = c.getContext("2d");

ctx.clearRect(0, 0, myCanvas.width, myCanvas.height);

};

function getDays(startDate,endDate) {

var oneDay = 24*60*60*1000; // hours*minutes*seconds*milliseconds
var firstDate = new Date(startDate);
var secondDate = new Date(endDate);

var diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime())/(oneDay)));

return diffDays;
};

</script>
</body>
</html>
